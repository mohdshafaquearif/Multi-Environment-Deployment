pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "shafaque26/dockerimage"
        DOCKERHUB_PASSWORD = credentials('dockerhub-creds')  // Your secret text credential ID here
        DOCKER_CLI = "/usr/local/bin/docker"  // Adjust path if needed
        CONTAINER_NAME = "my-running-container"  // Name for your running container
    }

    stages {
        stage('Checkout Code') {
            steps {
                echo "Cloning the repository..."
                git url: "https://github.com/mohdshafaquearif/Multi-Environment-Deployment.git"
            }
        }

        stage('Build Docker Image') {
            steps {
                echo "Building Docker image: ${DOCKER_IMAGE}:${BUILD_NUMBER}"
                script {
                    sh "${DOCKER_CLI} build -t ${DOCKER_IMAGE}:${BUILD_NUMBER} app"
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                echo "Logging in to DockerHub and pushing image..."
                script {
                    sh """
                        echo '${DOCKERHUB_PASSWORD}' | ${DOCKER_CLI} login --username shafaque26 --password-stdin
                        ${DOCKER_CLI} push ${DOCKER_IMAGE}:${BUILD_NUMBER}
                        ${DOCKER_CLI} logout
                    """
                }
            }
        }
        
        stage('Run Docker Container') {
            steps {
                echo "Running Docker container from image: ${DOCKER_IMAGE}:${BUILD_NUMBER}"
                script {
                    sh """
                        ${DOCKER_CLI} rm -f ${CONTAINER_NAME} || true
                        ${DOCKER_CLI} run -d --name ${CONTAINER_NAME} -p 3000:3000 ${DOCKER_IMAGE}:${BUILD_NUMBER}
                    """
                }
            }
        }
    }

    post {
        success {
            echo " Docker image pushed and container running successfully: ${DOCKER_IMAGE}:${BUILD_NUMBER}"
        }
        failure {
            echo " Pipeline failed. Please check logs."
        }
    }
}
